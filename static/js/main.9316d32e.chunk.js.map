{"version":3,"sources":["logo.svg","components/Navbar/NavItem/Navitem.js","components/Navbar/NavItem/Navbar.js","containers/Home/Favourites/Favourites.js","containers/Home/Home.js","App.js","actionTypes/actionTypes.js","reportWebVitals.js","index.js"],"names":["navItem","props","className","to","link","children","Navbar","Component","Favourites","favourites","this","check","data","filter","val","isFavourite","map","name","id","console","log","connect","state","planets","Home","Element","coloring","fontSize","color","onClick","ele","addFavourite1","style","newRender","App","planetsAdded","addFavourites","index","findIndex","target","home","addToFav","Fragment","path","exact","render","component","dispatch","axios","get","then","response","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","storeInit","store","createStore","action","newState","applyMiddleware","thunk","app","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9316d32e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./Navitem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst navItem = props => {\r\n  return (\r\n    <Link className=\"Navitem\" to={props.link}>\r\n      {props.children}\r\n    </Link>\r\n  );\r\n};\r\nexport default navItem;\r\n","import React, { Component } from \"react\";\r\nimport NavItem from \"./Navitem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Navbar\">\r\n        <div className=\"title\">\r\n          <Link to=\"/Home\" className=\"Navitem1\">\r\n            Machstatz\r\n          </Link>\r\n        </div>\r\n        <div className=\"navList\">\r\n          <NavItem link=\"/Home\">Home</NavItem>\r\n          <NavItem link=\"/Favourites\">Favourites</NavItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nclass Favourites extends Component {\r\n  render() {\r\n    let favourites = null;\r\n    if (this.props.check) {\r\n      let newArray = this.props.data.filter(val => {\r\n        return val.isFavourite === true;\r\n      });\r\n      //   console.log(newArray);\r\n\r\n      favourites = newArray.map(val => {\r\n        return (\r\n          <div key={val.id} className=\"Element\">\r\n            <h1>Planet name :{val.name}</h1>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    console.log(favourites);\r\n    return <div>{favourites}</div>;\r\n  }\r\n}\r\nlet storeToProps = state => {\r\n  if (state) {\r\n    return {\r\n      data: state.planets,\r\n      check: state.check,\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default connect(storeToProps)(Favourites);\r\n","import React, { Component } from \"react\";\r\nclass Home extends Component {\r\n  Element = null;\r\n  newRender() {\r\n    if (this.props.check) {\r\n      this.Element = this.props.data.map(val => {\r\n        {\r\n          let coloring = {\r\n            fontSize: \"48px\",\r\n            color: \"grey\",\r\n          };\r\n          if (val.isFavourite === true) {\r\n            coloring = { ...coloring, color: \"red\" };\r\n          }\r\n          return (\r\n            <div key={val.id} className=\"Element\" id={val.id}>\r\n              <h1>Planet name :{val.name}</h1>\r\n              <i\r\n                onClick={ele => this.props.addFavourite1(ele, val.id)}\r\n                className=\"fa fa-heart\"\r\n                style={coloring}\r\n              ></i>\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    this.newRender();\r\n    return this.Element;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/NavItem/Navbar\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as actionTypes from \"./actionTypes/actionTypes\";\nimport Element from \"./Element/Element\";\nimport Favourites from \"./containers/Home/Favourites/Favourites\";\nimport Home from \"./containers/Home/Home\";\nclass App extends Component {\n  componentDidMount() {\n    this.props.planetsAdded();\n  }\n  addToFav(ele, id) {\n    this.props.addFavourites(id);\n\n    let index = this.props.data.findIndex(val => {\n      return val.id === id;\n    });\n    if (this.props.data[index].isFavourite) {\n      ele.target.style.color = \"red\";\n    } else {\n      ele.target.style.color = \"grey\";\n    }\n  }\n\n  render() {\n    let home = (\n      <Home\n        data={this.props.data}\n        check={this.props.check}\n        addFavourite1={(ele, id) => this.addToFav(ele, id)}\n      />\n    );\n    return (\n      <React.Fragment>\n        <Navbar />\n        <Route path=\"/Home\" exact render={() => home} />\n        <Route path=\"/Favourites\" exact component={Favourites} />\n      </React.Fragment>\n    );\n  }\n}\nlet stateToProps = state => {\n  if (state) {\n    return {\n      data: state.planets,\n      check: state.check,\n    };\n  } else {\n    return {};\n  }\n};\nlet propsToStore = dispatch => {\n  return {\n    planetsAdded: () => dispatch(actionTypes.addPlanets()),\n    addFavourites: id => dispatch({ type: \"ADD_FAV\", id: id }),\n  };\n};\n\nexport default connect(stateToProps, propsToStore)(App);\n","import axios from \"axios\";\r\nlet type = \"ADD_PLANETS\";\r\nexport let addPlanets = () => {\r\n  return dispatch => {\r\n    // console.log(\"In the axios\");\r\n    axios\r\n      .get(\"https://assignment-machstatz.herokuapp.com/planet\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        dispatch({ type: type, data: response.data });\r\n      });\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// ///////////////////////////\n\n/////////////INITIALIZE REDUCER///////////\nlet storeInit = {\n  planets: null,\n  check: false,\n};\n///////////Reducer////////////\n\nlet reducer = (state = storeInit, action) => {\n  if (action.type === \"ADD_PLANETS\") {\n    // console.log(action.data);\n    let newState = { ...state };\n    newState.planets = [...action.data];\n    newState.check = !newState.check;\n    state = { ...newState };\n    return state;\n  }\n  if (action.type === \"ADD_FAV\") {\n    // console.log(action.id);\n    let newState = { ...state };\n    let index = newState.planets.findIndex(val => {\n      return val.id === action.id;\n    });\n    // console.log(index);\n    newState.planets[index].isFavourite = !newState.planets[index].isFavourite;\n    state.planets[index] = { ...newState.planets[index] };\n    // console.log(state);\n    return state;\n  }\n};\n\n////////////////Create Store//////////\nlet store = createStore(reducer, applyMiddleware(thunk));\n////////////////////\n\nlet app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\nReactDOM.render(\n  <React.StrictMode>{app}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}